-okay, so the best way to do this would be to somehow integrate with google claendar
	-we are probably going to have to do this using api calls to be honest
	-the issue with this is that we are going to have to create our own calendar, then issue an add or edit to google calendar everytime that happens
	-also, it might be an issue to authenticate with Google Calendar. this would involve sending out requests with c++
	-yeah as much as I want to experience making a c++ app like htis, python might be the best way to do this.
	-oh wait, it supports the .net framework...oh, for c sharp....hmmmm. this is tough. because we can make this in c#. that might actually be a good mix
	-that would align more with my goals, but I am not suer how to make cross platofrm c#.
-okay, so what are we going to do next...I guess I should ugh, pick a languge and start fucking going I guess.
-python will probably be best to be honest. what I really need to do is make sure that I can run it on my windows 10 machine too.
-so lets just make one and see
-so we are going to do this online...also so we can fix problems and update as needed
-so we do need to figure out the apis and everything. so what info do we need to get. we need to get this info fresh in our heads again
-right so I hate to admit it,but I am going to need to figure out the google caledanr integration first
-getting that module to work will be the first thing that we have to do....and i need to make sure that we get the events back when they are changed and stuff.
-I need to create a module that will automatically create an event, in a google calendar window....but so I even need to store that info????
-no google calendar is our backend database. heres how it will work....we will issue create commands from our module and front end, and we will show the 
google calendar on our frontend as well. whenever we want to find out metrics on an individual we will just query google calendar. 
-so essentially google calendar is our database. and we will only issue create commands to it....but the trick will be forcing the user to create events
through our interface, and not that of Google Calendar.
-I will basically need to give him a new calendar, and have him transition over
-this is perfect. the embedded calendar is read only anyways. so to add an event in the mainpage the user will be forced to go through
our module. to delete an event they will have to go to google calendar, and to get metrics we will query google calendar.
-for this we will want to create a module that will handle all of this for us. getting information on events is important. 
	-getEvents
-I bet that I can keep a list of event ids locally, and that can help me with my update from Google calendar. it will be hard to keep 
this in exact sync with google calendar though. but I do not see an api that lets me select a range of dates to get from
-so we will not have to keep track of the events, we can set max and min date parameters
-so we know this is possible, but we do need to get this running in python
-so it looks like I just need a client_secrets.json file and I will be good, which is pretty fortunate
-okay, what else. we need to build out the module that will assist us in grabbing all these events
-alright, what is next. we need to figure out how to pass along the name.
-well it comes in in the url....the template...as an argument
-the only thing I can think of is to scan the url to find it

-okay, so we need to figure out why we have insufficient permissions
-okay, so we are still getting these insufficient permissions and it is because that api is not allowed since we do not have a verified app

-for right now we are just going to role with this
-okay cool, so we can add calednar events. I have figured that out
-so, just as a fun thing lets figure out how to do the searches in the main menu, so vue search
-cool, we have filter working too
-so the next thing is to pull metrics. the first part of this was going to be pulling all the events from google calendar
-hmmmmm okay so I think we got what we needed figuring this out
-so we are going to have to think about how in javascript we are going to be able to request this type of data. so we can call a method that requests
this shit...on page load we will send off that request
-right so on page load we will always need to load metrics. so when we load these metrics if we have a name we can send that in the request, if there is 
no name then we will fetch all.
-so I guess the first step is going to be that we need to figure out how to request this stuff from my server. what 
-hmmm, the issue is going to be sending the name. the issue is we are using the same function for the main page and for the knights. so how are we going to 
pull the name???

-right so we know the name is going to be the hardest part, vue needs to know what name we are on....so we can get that from the url, or what else???? because I 
am tired of getting it from the fucking url. when we render that html can we basically save that name....no that is going to be in python....the only way that we know 
the name is because it is in the javascript. lets try to see if we can change the path url. in that way we can include arguments in the url....and this will be easier

-okay so what is next. I do want a better calendar, but I should put this thing online so that Hector can actually get to it
-yeah the next thing that I have to do is actually deploy it on my servers

-so I am just going to go all in and try to deploy to the server. no transition that I will be trying to do
-so I do need to figure out how I am going to be able to connect to the django socket and everything. I might have to burn through a few tutorialsx`x`
-fix came in that we needed to add a static file path to the urls
	-https://stackoverflow.com/questions/39907281/django-uwsgi-static-files-not-being-served-even-after-collectstatic

/home/andrewserver2/knights_scorecard/uwsgi_params

-so I guess we can read from one persons calendar given our own calednar with permissions right
-so we just need to build a module that will pull that shit in, and break down what the calendar event actually says.
-so we need to build a dictionary, this is a lot of work to be doing on the loading of a webpage. then again, we are only grabbing 
the last 30 days, so yeah lets keep doing this on the fly

-apis
	-our server
		-getPredictedIncome
			-parameters: # dates into future, name of knight (if none return aggregate of all)
			-returns: predicted income for time frame based on # of meetings scheduled
		-addKnight
			-parameters: name of knight
			-returns: whether it was successful or not
		-deleteKnight
			-parameters: name of knight
			-returns: whether deletion really worked
	-google calendar
		-getNumFutureMeetings
			-parameters: # dates into future
			-returns: json data of all the future meeting calednar events
		-addFutureMeeting
			-parameters: json of event details

-so what is the next step? dissecting these calednar events
-the first thing that we have to really worry about is, how are we 
going to differentiate between a regular calnedar event and the ones
set up by HEctor. lets just assume all have the (VM Reminder) on them

-so we are assuming that is the case now. now, the next thing that we have to worry about is authentication
-we are going to need this token.pickle. so lets set up a database so that we can properly get the token of
whoever is using the app. so we need to detect when we have a new user and then ask them to sign in to goolge
so we can grab the token that we need, but we do need to serve it up in the first place

-so how are we going to authenticate with a user
-we could have a landing page where we just ask the user to sign in with google,
and from there we might be able to keep the token

-I wonder if we can take the same token that we ask from the user to sign in to request 
events from calednars

-so how can I find if one token will lead to another??? well, it does not seem like Google is making 
that info readily avaible. mostly it just seems like you can use google to get a user's information, and
not anything that might allow you to access their google calendar. i believe they have to separatly allow
you to do that. But, we can add some verfication. Like a landing page that verfiifes that it is Hector or whatever

-but lets worry about that later.
-what about a button in the upper right hand corner of the page that says authenticate. well, what we can 
also do is create that landing page, and then we know who is logged in. and from there we know where to grab that 
token

-okay cool. so lets work on that
-the first thing that we are going to need to do is make a landing page. which will just be the page that 
sends the user's info to the backend. then we will see if the user's email is in the whitelist
-so that is what we are working on right now. web page that will verify with the backend that the user is allowed to be on the site
-so we are also going to need a folder to store these tokens. because our backend is going to detect if we have a token for the user, and then go from there

-I think it will only be the id that we need. yeah store the id. so we dont even need to hash it

-so I do need to think of a way that I can make these requests from ym server. meaning...How do I get the token 
back from the user...wait...what is returned when I sign on with the additional scopes?

-so it is going to be the access token that we are going to store. 
-and then we can use that later. Shit, we probably don't even need to store this token as a 
file. we can probably just insert it into the request


-so this seems to be going well. so the next step is to save the shit in the database
-so I am not 100p sure here, but it does seem like I should make some type of class that 
does interface with the db, especially since the database can throw errors
-we want to be able to catch those errors and respond accordingly, mainly with empty
strings or None....None will probably be better. that is a little more explicit
-but baseline, we do want to have a wrapper class. Yeah, that sounds like a smart idea

-so we dont really need the authentication page anymore. if something is wrong with the
form that we got from the login page, that is where we need to reject them. I guess reject them
with an alert that they can not sign in. that they can not. so if we are going to reject them
that just sounds like an http 300 response

-alright, so now we are dealing with sessions. So, we have just logged someone into a session correct?
-so it does seem like we are good on the sessions.
-so now we just need to figure out how to form a credential with just the tokenid, or the saved token
really

-so the idea is that you will send in a request, and then just tell the sessionManager what to do
-so, for example, sendin the session managher a request in teh constructor, and then give it a key
and a value to set, and in the session Manager we will just compensate for errors and such.
so it would just be a get and set, butit would return "" or None if nothing is set, instead of 
throwing an error

-so now we just have to test whether these tokens are actually correct. can we actually get access
to others accounts by just that tokenid....which is ugh....pretty hopeful I guess.
-might have wanted to do some research before this tbh, but whatever

-looks good big boy. so what is going to need to happen next is that I need to test that
stainless809 can access wilkinsaf and wilkinsdev. which means that we are going to need to 
create these userInfo. which means...ugh how are we fucking going to create these....??? I
guess what we can do is store their emails or something. yeah we really dont need permissions
from them, just the emails. we will have to put the test cases in manually, just create a 
test case or something, some other file. that makes sense

-then we see if we can access their google calendar's.
-alright im tired. night. 

-yeah so I guess the next thing is just to see if we can access another user's google calendar
with the token that we have. right, because we were granted certain permissions to see their
calednar
-we need to do this by assigning the right email addresses to the client list that we have
-so which email are we granted for rn: stainless809
-so we need to give access in our wilkinsaf and our dev account
	-then we need to have those emails as users right.....fuck we messed these tables up
	-our knights are supposed to be the info, and our users are supposed to be the users of the app.
	-shit. okay, reset the tables. well its not only that, we have to change code

-perfect, that change took like 5 seconds. okay, now we need to find a way to load the knights into 
the database. now....should we make a specific tool to do this on the...no
	-load it up each time we run the server
	-manually add it in with sql
	-manually add it in with a script that we have
		-how hard will this be? would we need to load django to do this..??? probably


-so not only do we need to link the gmails, but we need to show the knights calendar in the code
-so we have the permissions, but now we need to pull up the right calednar

-lol I need to pull the list from the sevrer and then go from there, because right now we are not even getting a list

-okay, so now I need to think about refresh the tokens....fuck. I need to add support for this earlier
on...Shouldnt we catch the refresh before??? Also 

-okay so for some reason it doesnt l
-so now we are going to need to figure out uugghhh how we are going to request the email right??
-well we will pass in the name to the server and ask for a lookup I guess, which is not great tbh.
ideally it should be a guid, but for now...whatever

-so now we want to get the email...
-alright, so how are we going to request the metrics just for 

-so I guess we need to refresh the token. But how are we going to do that???
-dont we have some logicals somewhere. I know we have some logicals to reject if a token is expired
yeah where is that

-well, maybe we shouldnt be so worried about this, and be more concerned about how to refresh a token when 
it is done and google will not accept it. might be a good idea

-so I probabhly need to build the request with additional arguments for the credentials
	-but the question now is, what fields do we have to enter, and more over how do we actually get
	those fields

-yeah, so I am going to need a refresh token somehow
-I am thinking that there is no refresh token for javascript applications
-so, how do we request on python...?????
-well it seems that our expired method doesnt work. so if we make that work then
we should be fine. because we'll be granted a new access token everytime.

-so we do need to wait for that token to expire I guess....well no, we can change it in the db
-so what happened, is when we called the new user function we overwrote what was there before
-lets not do that, there must be some way to create if its not there and if it is then update


userInfo matching query does not exist.
False
userInfo matching query does not exist.

-so now we actually need to pull the metrics and 
-actually, what I want to do is create a script that will load the csv of the clients into the 
app. that shouldn't be that crazy hard

-so I am going to have to make it so that we are relating knights differently now, we are going
to have to pass in a id to the frontend and then pass that to the backend to relate it

-alright, so we have to think about how to search up these names with spaces. like some delimeter or something
-...I can not think about how we can manually do this

-a queryset needs to be implemented probably
-so I need to think about what I want to do. do I want to pass these gid
-or we can fuck around with these querysets

-alright, so I guess that that worked
-so now we have to work on the analytics
-so we are going to need to start doing teh analutics
-oh, I should get each of the analytics

details: "Not a valid origin for the client: http://valutaholdings.duckdns.org:1666 has not been whitelisted for client ID 124633307597-s1ii2fartnupr8qut8j3burgr0a6ufpu.apps.googleusercontent.com. Please go to https://console.developers.google.com/ and whitelist this origin for your project's client ID."
-alright, so what is the next step, probably generating metrics for combined. So, we are going to 
need to go to a new page, and have it load metrics. have a button that will say, gather all 
metrics. 

-so what is my next thing, I need to make a new page....actually I just need to make a button.
-the button will request gradually fill up the Total Metrics tab off to the right
that makes sense to me.
-well...we just send out a request that will generate all the metrics on the backend...
-I also need to create some test data
-yeah so if I pass in 
-so first thing is first,make the button
-so now we need to create the test data. so we need to load up different things into
our local sql database, and give permissions in google calendar
-so what do i have to do next. I need to make a spinning loading icon for when we fetch the meterics

-so now the big question is, how can i make it so that I can reauthorize everytime the token runs out 
-so we can now get the access token, and I guess the email at will
-so now what are we going to have to do. we 
-so we are still working on this sign in/ signout thing. the cookies are taking care of it right...
-well maybe we need to see if another link will log us out. maybe there is something about the request that
can not log us out

-I hit this url, and I get an HTTP 405
-ok, so I guess we are going to need to figure out the sign out thing
-it says this is forbidden. maybe we should allow the login, and then 
- I am really unsure why this is not working. why I can n ot find a OP1rilv5VcmnXvB8giaasTeQXzzXagW9kFHE2CnqXYtj4juTYeIXZtWZ7eHoxGGvITfMJ0HaK9mnaXqU5XIgwhy is it that the exclamation mark is there
-so it seems that we need to set a password somewhere
-fuck this module, we are just going to delete the entry manually...wait...we will delete the 
thing manually after we deactivate like we did before
-yeah we might need to send back an authorized prompt before we try to access the site

-so what metrics do we need. we need to figure that one out,

-they have cut an agreement with the vendor 
-so what is next. lets make it faster by making a single get to calendar events
-so i bet I can find out exactly what they are returning by looking through their backend code
-so how are we going to verify that this person can actually log in????
-because right now we dont, it just lets them log in
-so for some rason in production there is no auth_user field....I dont know why
-oh, because we havent implemented the tool there yet....lol yeah ok



Worklog
_______________________________________________________
20190905 14:05 - 


TODO
_______________________________________________________


-make the agents list as tall as the screen
-pull in the timezone from the user and adjust the clock for that
-move timezone factor into a constants file (like extratime in models.py)
-expand to_gcal_url in tools.py to include timezone as well

-add in some type of logging
-make redirect with unauthorized access so the user knows why they are being logged out
-figure out the error that occurs when we try to login with stainless809 and then wilkinsaf
-check if we our authorization token still works after an hour

-change the timing so it shows just one month time frame, instead of 30 days behind
and into the future
-add a goto calendar feature that allows you to go straight to the calendar
-add mutli-user support, so that knights can view their own scorecard
	-this will require us to mess around with the user's which we will actualyl hae to do
-look at smartcalls to get ideas for styling
-make sure I have access to Patrick arnt account
-change the code so there is only one events fetch
	-we are going to wait until we have access to an account with more events to count



DONE
_______________________________________________________
-make sure that the height of our columns stay within the bounds of the window. we do not want to scroll to see these items
-make sure that modal closes after we submit it
-add meeting length
	-dont need this anymore
-figure out a way to serve token.pickle request page to the user
-move data onto our own database (knight names, their info, etc)
-only support a 30 day window for analytics, calednar events, etc...
-figure out how google tocken.pickles work like that back of your hand
-is the token.pickle that we hand to google calendar the same token that we get from a user signing onto their google account
-add more scopes from https://developers.google.com/calendar/auth
-get the google email the user is on when they visit the website (this might just be a cookie that we need to store)
-need to create landing page that will allow us to save user's google key (like postman did. we signed in with Google)
-figure out if the user has logged in with us before, and if they have not, ask them
to authenticate with google.
-figure out something to do when a user fails sign in. what happens?
	-send something to the backend or what?
-break getPastDates and getFutureDates into a separate file
-create a sessions file that will handle things for the session
-seems we are having trouble just after assigning the user session gid
	[25/Aug/2019 15:09:15] "GET /main/knight/?name=Felix HTTP/1.1" 200 2884
	Error finding user session value gid
	no gid
	Unauthorized: /metrics/
	[25/Aug/2019 15:09:16] "GET /metrics/?days_ago=30&metrics=&name=Felix HTTP/1.1" 401 0
	Error finding user session value gid
	no gid
	Unauthorized: /metrics/
	[25/Aug/2019 15:09:19] "GET /metrics/?days_ago=30&metrics= HTTP/1.1" 401 0

	-but we are not having issues the second time that we request from the site
-change it so that we are sending a uid instead of a name when requesting users
	-we fixed this so we are looking at first names and last names
	-good enough for now
-restructure our models so that we have a google calendar class that we call, instead of all of these methods
	-Yeah this has been taken care of in models, since this is our backend
-keep a session alive for the user
-make a signoout button
-figure out how to get metrics for all knights
-make sure the Knights list is sorted alphabetically
-make a spinning logo icon when we fetch the metrics
-make all webpages logon required
	from django.contrib.auth.decorators import login_required
-make sure you can only send requests (on the frontend) if you are a logged in user
-make sure we make a logout button
-integrate social_django with google calendar stuff: https://python-social-auth.readthedocs.io/en/latest/backends/google.html
-why do we have to log on twice to get this shit to work
-add "available" for appointment
-split index.html and knights.html into 2 apps
	-eh, this is unneeded
-add the date headers instead of (Past meetings/future meetings) -> previous appointment , future appointment
-ask hector for some money so that we can upgrade our hardware
-figure out why we have a horizontal scroll at the bottom....no matter what we seem to do

QUESTIONS
_______________________________________________________
-how do you manage google calendar events through the PhoneBurner software?
	-ideally the Scorecard program could just pull in google calendar events instead of you having to enter this data manually. However, I need to know more about how integrated your PhoneBurner software is with Google Calendar
-Do you have any idea of how you want to predict future earnings?
	-Based on future calendar meetings
	-(average earnings of each agent per day) * (number of agents) * (number of days)
	-some other correlation between time, number of agents, past meeting numbers
-Are there any other agent statistics you would like to track besides number of meetings?
	-maybe user rating of client or other data you collect on them
-Are there any meetings that you set up outside of the Eastern time zone
-what are the lengths of the meeting?
-what kind of info do you need from clients
-would you want calendar events to be sent out to clients as well?

RESOURCES
_______________________________________________________
-to start server: 
	-python manage.py makemiggrations
	-python manage.py migrate
	-python manage.py collectstatic
	-uwsgi --socket :8001 --module knightsTracker.wsgi (nohup uwsgi --socket :8001 --module knightsTracker.wsgi &)
-Google calendar getAPI: https://developers.google.com/calendar/v3/reference/events/list
-Google calendar postAPI: https://developers.google.com/calendar/v3/reference/events/insert
	-https://www.googleapis.com/calendar/v3/calendars/calendarId/events
-resource for adding permissions for Google pass through authentication: https://developers.google.com/identity/sign-in/web/server-side-flow

-test calendar
	id: stainless809@gmail.com
	eventid: 0ef72rn5h51uhdbghg7vivepgj

-embedd google calendar: 
	<b-container>
		<!-- Google Calendar -->
		<iframe src="https://calendar.google.com/calendar/b/1/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FChicago&amp;src=c3RhaW5sZXNzODA5QGdtYWlsLmNvbQ&amp;src=YWRkcmVzc2Jvb2sjY29udGFjdHNAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;src=ZW4udXNhI2hvbGlkYXlAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;color=%237986CB&amp;color=%237986CB&amp;color=%237986CB" style="border-width:0" width="800" height="600" frameborder="0" scrolling="no"></iframe>
	</b-container>

-page that works when authenticating with Google: https://developers.google.com/calendar/quickstart/python

-post solved our issue about passing in parameters after question mark
	-https://www.fir3net.com/Web-Development/Django/django-how-can-i-pass-a-string-from-a-url-to-a-view.html
	-the trick is that after the question mark gets included in the request, so we will need to grab the info from 
		the get request

-connecting nginx to django: https://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html

-google api credentials: https://console.developers.google.com/apis/credentials?project=quickstart-1552389800244

-how Google authentication works: https://developers.google.com/identity/protocols/OAuth2

-here are the two connections between signing in and the permissions I need for calendar
	-https://developers.google.com/identity/sign-in/web/incremental-auth
	-https://developers.google.com/identity/protocols/OAuth2WebServer

-this is the url to hit: http://127.0.0.1.xip.io:8000

-drop all tables: python manage.py sqlflush

-json that is returned by our profile and scope request from google
	{
	"message": "success",
	"value": {
		"El": "104667386943722742631",
		"Zi": {
		"token_type": "Bearer",
		"access_token": "ya29.GltlB4Njt5GVBLJ4YQeIORRlgpDzoAVLqGoaiPPvFvK7DomvTgXZTRWW0KSS5RBX9smbv3QGbTiSFAegjf-3lxxYcOnKVOPV_ZA-qOdPsOiZtzpzN1Xqbgqy9aIm",
		"scope": "email profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/userinfo.profile openid https://www.googleapis.com/auth/calendar.readonly",
		"login_hint": "AJDLj6JPqyPzCmrp9ZPwxUbM4ItYxb_GGMylFUzhPH57OwKZ2RHhPeeRO9STvfS7ze_N_zZanXBBs53IoqIruo7A1ZrNfIvnYDqyPglcwI4LmPFYFvgkFw0",
		"expires_in": 3600,
		"id_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjYwZjQwNjBlNThkNzVmZDNmNzBiZWZmODhjNzk0YTc3NTMyN2FhMzEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiMTI0NjMzMzA3NTk3LXMxaWkyZmFydG51cHI4cXV0OGozYnVyZ3IwYTZ1ZnB1LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTI0NjMzMzA3NTk3LXMxaWkyZmFydG51cHI4cXV0OGozYnVyZ3IwYTZ1ZnB1LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTA0NjY3Mzg2OTQzNzIyNzQyNjMxIiwiZW1haWwiOiJzdGFpbmxlc3M4MDlAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiI0dHFrMlRGZEtzT1RSVmJaUHNMY3ZRIiwibmFtZSI6IkFuZHJldyBXaWxraW5zIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BQXVFN21BYnhGNk11aGR1SXI4ZG9kM3prMURVeGt3TmU1MDB6RzljR25vNT1zOTYtYyIsImdpdmVuX25hbWUiOiJBbmRyZXciLCJmYW1pbHlfbmFtZSI6IldpbGtpbnMiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTU2NTgzOTE0OSwiZXhwIjoxNTY1ODQyNzQ5LCJqdGkiOiIzZTYzOTMwNmE1YmU4YmY1MjY4ZTFlZWNjYzAzMjM2YWQ5MDNmODNmIn0.MaQIuk6GtAygN59KgLLITVHzVzFtYu4MX_tXaC-zGC3LbaseK-V0sIPhmYKuFGIM2gxUMndj_PKTIvS2c_QO2wI3srdRjoMecj6HyvdcZj9Pe9uftNuAcAJ6TxOljr74nAXBAYrZmhU6356VwUYJF9w2YkXgsS4OecBcPEBgGk9RJPMmYs4G8Vnkp7oz9psj9FX3VXoe7iENMJGZ4jRw0o59R4fJ4BjfDVPNOpbIwpq4x6cuUiev6ntuauGBvOeBp-OP1rilv5VcmnXvB8giaasTeQXzzXagW9kFHE2CnqXYtj4juTYeIXZtWZ7eHoxGGvITfMJ0HaK9mnaXqU5XIg",
		"session_state": {
			"extraQueryParams": {
			"authuser": "0"
			}
		},
		"first_issued_at": 1565839149685,
		"expires_at": 1565842749685,
		"idpId": "google"
		},
		"w3": {
		"Eea": "104667386943722742631",
		"ig": "Andrew Wilkins",
		"ofa": "Andrew",
		"wea": "Wilkins",
		"Paa": "https://lh3.googleusercontent.com/a-/AAuE7mAbxF6MuhduIr8dod3zk1DUxkwNe500zG9cGno5=s96-c",
		"U3": "stainless809@gmail.com"
		}
	}

































ANSWERED
_______________________________________________________
-how would you feel about a software program compared to an excel spreadsheet

-what utilities are you currently working with? – Yes very open to outside conventional wisdom.

                -keep track of information – My current CRM Program keeps reports, reports then are matched with Google Calendar and affirmed that there was an appointment and should be billed at the end of the month.

                -receive payments – Paypal

                -send out invoices – Via Paypal

                -Calendar?: I believe you mentioned google calendar – Google Calendar very user friendly and calendar sharing is excellent and interfaces with Outlook

-how many individual field agents are you tracking? – 30 Agents and growing.

-do you need to keep track of the members that they are seeing? – Yes, my currently program Phone Burner accomplishes a lot of the CRM needed to maintain keeping track of KC Members and the results of our phone discussions.

                -information on the members such as name, phone number, etc... Phone Burner accomplishes this currently for us.

-do you need to track statistics per agent? – Yes, statistics would be very appealing…currently not doing this.

                -meetings they had – Yes, I’m very open to this feature. Statistics will allow us to continue to sell our service to other agents. As well, assist in our exit strategy and we continue to build this business to sell.

                -what came of the meetings – Yes.

                -etc...

-would you like a visual representation of the number of meetings each agent had over time?

-such as a line graph – Yes, sounds sophisticated and interesting.

-assume you want to be able to view the scorecard from days/weeks/months years in the past correct? – Yes.

-is there a team that you work with? – No team currently just myself and 1 associate.

                -how do you divide clients -  I call for all the clients.

-Do you care about logging when the meetings take place, or whether they actually occurred – We confirm every appointment the day prior and that has served as confirmation that the actual appointment occurred or will occur and is then deemed billable.

-Do you want the scorecard to make predictions about how much you will earn in the future based on the values of the past? – Yes.





